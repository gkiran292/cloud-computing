package org.iu.engrcloudcomputing.memcached.keyvaluestore;

import com.google.cloud.storage.*;
import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;
import org.iu.engrcloudcomputing.memcached.keyvaluestore.autogenerated.KeyValueStoreGrpc;
import org.iu.engrcloudcomputing.memcached.keyvaluestore.autogenerated.Keyvalue;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

public class KeyValueStoreClient {

    public static void main(String[] args) throws IOException {

        String bucketName = "gopikiran-talangalashama";

        String srcFilename = "kv_vm_startup.sh";

        Path destFilePath = Paths.get("kv_vm_startup.txt");
        // Instantiate a Google Cloud Storage client
        Storage storage = StorageOptions.getDefaultInstance().getService();

// Get specific file from specified bucket
        Blob blob = storage.get(BlobId.of(bucketName, srcFilename));

        System.out.println(blob.exists());
//
// Download file to specified path
        blob.downloadTo(destFilePath);

//        BlobId blobId = BlobId.of(bucketName, "pom.xml");
//
//        BlobInfo blobInfo = BlobInfo.newBuilder(blobId).setContentType("text/plain").build();
//
//        storage.create(blobInfo, Files.readAllBytes(new File("pom.xml").toPath()));
//
//        System.out.println("Stored!!");

//        ExecutorService threadPool = Executors.newFixedThreadPool(50);
//
//
//        threadPool.execute(new ParallelClient("master", "//Users//gkiran//Downloads/Walden-LifeInTheWot"));
////        for (int i = 0; i < 50; i++) {
////            String key = "India"+ i;
////            String value = "Country" + i;
////            threadPool.execute(new ParallelClient(key, value));
////        }
//        threadPool.shutdown();
//        ManagedChannel channel = ManagedChannelBuilder.forAddress("localhost", 9000).usePlaintext().build();
//        ManagedChannel channel = ManagedChannelBuilder.forAddress("35.231.250.4", 9000).usePlaintext().build();
//        KeyValueStoreGrpc.KeyValueStoreBlockingStub keyValueStoreBlockingStub = KeyValueStoreGrpc.newBlockingStub(channel);
//
////        Keyvalue.Code responseCode = keyValueStoreBlockingStub.set(Keyvalue.KeyValuePair.newBuilder()
////                .setKey("master").setValue("value").build());
////        System.out.println("Response Code: " + responseCode.getResponseCode());
//
//        Keyvalue.KeyValuePair keyValuePair = keyValueStoreBlockingStub.get(Keyvalue.Key.newBuilder().setKey("master").build());
//        System.out.println("Key: " + keyValuePair.getKey() + " Value: " + keyValuePair.getValue());
    }
}